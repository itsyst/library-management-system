
@model Library.MVC.ViewModels.BookDetailsViewModel

@{
    ViewData["Title"] = "Add Book";
}

<div class="container-fluid px-4 py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-xl-10">
            <div class="edit-header mb-5">
                <div class="d-flex align-items-center justify-content-between">
                    <div>
                        <h1 class="display-6 fw-bold mb-2" style="color:var(--primary-color)">Add New Book</h1>
                        <p class="text-muted">Enter book details and upload a cover image</p>
                    </div>
                    <div class="header-actions">
                        <a asp-action="Index" class="btn btn-outline-secondary me-2">
                            <i class="bi bi-arrow-left"></i> Back to Library
                        </a>
                    </div>
                </div>
            </div>

            <form asp-action="Create" method="post" enctype="multipart/form-data" class="modern-form">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger modern-alert"></div>
                <input asp-for="BookDetails.ID" type="hidden" />

                <div class="row g-4">
                    <!-- Cover Image Upload -->
                    <div class="col-12 col-lg-4">
                        <div class="cover-upload-section">
                            <div class="cover-preview-container">
                                <div class="current-cover">
                                    <img src="@(Model.BookDetails?.ImageBinary ?? "/uploads/9780555816023.png")"
                                         alt="@(Model.BookDetails?.Title ?? "Book")"
                                         class="cover-image"
                                         id="coverPreview" />
                                    <div class="cover-overlay">
                                        <i class="bi bi-camera-fill"></i>
                                        <span>Add Cover</span>
                                    </div>
                                </div>
                                <div class="upload-area" id="uploadArea">
                                    <input type="file"
                                           name="CoverImage"
                                           id="coverInput"
                                           accept="image/*"
                                           class="file-input" />
                                    <div class="upload-content">
                                        <i class="bi bi-cloud-upload"></i>
                                        <h5>Drop image here</h5>
                                        <p>or <span class="upload-link">browse files</span></p>
                                        <small>JPG, PNG, WEBP up to 5MB</small>
                                    </div>
                                </div>
                                <div class="upload-actions mt-3">
                                    <button type="button" class="btn btn-outline-primary btn-sm" onclick="triggerUpload()">
                                        <i class="bi bi-upload"></i> Choose Image
                                    </button>
                                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="clearImage()">
                                        <i class="bi bi-trash"></i> Remove
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Book Fields -->
                    <div class="col-12 col-lg-8">
                        <div class="form-card">
                            <div class="form-section">
                                <h4 class="section-title">Book Information</h4>
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label asp-for="BookDetails.ISBN" class="form-label">ISBN</label>
                                            <input asp-for="BookDetails.ISBN" class="form-control modern-input" required />
                                            <span asp-validation-for="BookDetails.ISBN" class="validation-message"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="form-label">Copies</label>
                                            <input asp-for="Copies"
                                                   type="number"
                                                   min="1"
                                                   class="form-control modern-input"
                                                   required />
                                            <span asp-validation-for="Copies" class="validation-message"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label asp-for="BookDetails.Title" class="form-label">Title</label>
                                    <input asp-for="BookDetails.Title" class="form-control modern-input" required />
                                    <span asp-validation-for="BookDetails.Title" class="validation-message"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="BookDetails.Description" class="form-label">Description</label>
                                    <textarea asp-for="BookDetails.Description"
                                              class="form-control modern-input"
                                              rows="4"
                                              placeholder="Enter book description..."
                                              required></textarea>
                                    <span asp-validation-for="BookDetails.Description" class="validation-message"></span>
                                </div>

                                <!-- Author Dropdown + Add Modal -->
                                <div class="form-group">
                                    <label asp-for="BookDetails.AuthorID" class="form-label">Author</label>
                                    <div class="input-group author-input-group">
                                        <span class="input-group-text">
                                            <i class="bi bi-person"></i>
                                        </span>
                                        <select asp-for="BookDetails.AuthorID"
                                                asp-items="@Model.Authors"
                                                class="form-select modern-input rounded-0"
                                                id="authorSelect"
                                                required>
                                            <option value="">-- Select Author --</option>
                                        </select>
                                        <button type="button" class="btn btn-primary add-author-btn" onclick="addNewAuthor()">
                                            <i class="bi bi-plus"></i> Add New
                                        </button>
                                    </div>
                                    <span asp-validation-for="BookDetails.AuthorID" class="validation-message"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="form-actions mt-5">
                    <div class="d-flex gap-3 justify-content-end">
                        <a asp-action="Index" class="btn btn-outline-secondary btn-lg mr-2">
                            Cancel
                        </a>
                        <button type="submit" class="btn btn-primary btn-lg save-btn">
                            <i class="bi bi-plus-circle"></i>
                            Add Book
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Image upload functionality
        const coverInput = document.getElementById('coverInput');
        const coverPreview = document.getElementById('coverPreview');
        const uploadArea = document.getElementById('uploadArea');

        if (coverInput) {
            coverInput.addEventListener('change', handleFileSelect);
        }
        if (uploadArea) {
            uploadArea.addEventListener('dragover', handleDragOver);
            uploadArea.addEventListener('drop', handleDrop);
            uploadArea.addEventListener('click', triggerUpload);
        }

        function handleFileSelect(e) {
            const file = e.target.files[0];
            if (file) previewImage(file);
        }

        function handleDragOver(e) {
            e.preventDefault();
            uploadArea.classList.add('drag-over');
        }

        function handleDrop(e) {
            e.preventDefault();
            uploadArea.classList.remove('drag-over');
            const file = e.dataTransfer.files[0];
            if (file && file.type.startsWith('image/')) {
                coverInput.files = e.dataTransfer.files;
                previewImage(file);
            }
        }

        function previewImage(file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                coverPreview.src = e.target.result;
                uploadArea.style.display = 'none';
            };
            reader.readAsDataURL(file);
        }

        function triggerUpload() {
            coverInput.click();
        }

        function clearImage() {
            coverInput.value = '';
            coverPreview.src = '/uploads/9780555816023.png';
            uploadArea.style.display = 'flex';
        }

        // Add Author Modal AJAX
        async function addNewAuthor() {
            const { value: authorName } = await Swal.fire({
                title: 'Add New Author',
                input: 'text',
                inputLabel: 'Author Name',
                inputPlaceholder: 'Enter author name...',
                showCancelButton: true,
                confirmButtonText: '<i class="bi bi-plus-circle"></i> Add Author',
                cancelButtonText: 'Cancel',
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#6c757d',
                inputValidator: (value) => {
                    if (!value || value.trim().length === 0) {
                        return 'Please enter an author name';
                    }
                    if (value.trim().length < 2) {
                        return 'Author name must be at least 2 characters';
                    }
                    if (value.trim().length > 100) {
                        return 'Author name must be less than 100 characters';
                    }
                },
                preConfirm: async (name) => {
                    const trimmedName = name.trim();

                    // Show loading state
                    Swal.showLoading();

                    try {
                        const response = await fetch('/Authors/CreateInline', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify({ Name: trimmedName })
                        });

                        const result = await response.json();

                        if (!result.success) {
                            Swal.showValidationMessage(result.error || 'Failed to add author');
                            return false;
                        }

                        return result;
                    } catch (error) {
                        console.error('Error adding author:', error);
                        Swal.showValidationMessage('Network error occurred. Please try again.');
                        return false;
                    }
                }
            });

            // Handle successful author creation with toastr
            if (authorName) {
                // Update the dropdown
                const select = document.querySelector('[name="BookDetails.AuthorID"]');
                const option = new Option(authorName.authorName, authorName.authorId, true, true);
                select.add(option, 1);

                // Show success with toastr - clean and consistent
                toastr.success(`Author "${authorName.authorName}" added and selected!`, 'Success');

                // Optional: Add visual feedback
                select.classList.add('is-valid');
                setTimeout(() => {
                    select.classList.remove('is-valid');
                }, 2000);
            }
        }
    </script>
}
