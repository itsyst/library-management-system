@using Library.Domain.Entities
@using Library.Domain.Enums
@using Library.MVC.Controllers
@using Library.MVC.ViewModels
@model Library.MVC.ViewModels.LoanViewModel

@{
    ViewData["Title"] = $"Lånedetaljer - #{Model?.Loan?.Id}";
    var isOverdue = Model.Loans.Any(x => x.Status == LoanStatus.Overdue);
    var isActive = Model.Loans.Any(x => x.Status == LoanStatus.Active);
    var isReturned = Model.Loans.Any(x => x.Status == LoanStatus.Returned);
    var member = (ViewBag.Member) as Member;
    var name = (member?.Name) as string;
}

<div class="container-fluid px-4 py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-xl-11">
            <div class="loan-details-container">
                @Html.AntiForgeryToken()

                <!-- LOAN HEADER -->
                <header class="loan-details-header mb-5 position-relative overflow-hidden">
                    <div class="header-pattern position-absolute w-100 h-100"></div>
                    <div class="header-particles" id="headerParticles"></div>
                    <div class="position-relative z-2">
                        <div class="row align-items-center">
                            <div class="col-lg-8">
                                <div class="header-content">
                                    <div class="loan-status-icon mb-3">
                                        <div class="status-icon-wrapper @GetStatusClass(Model.Loan.Status)">
                                            <i class="bi bi-person-circle text-white"></i>
                                            <div class="status-pulse"></div>
                                        </div>
                                    </div>

                                    <h1 class="display-5 fw-bold pb-2 loan-header-title">
                                        <span class="typing-animation">Medlemsuppgifter</span>
                                    </h1>
                                    <p class="page-subtitle fs-5 mb-0">
                                        <span class="subtitle-animation">Detaljerad information för <strong class="text-success">@member?.Name</strong></span>
                                    </p>

                                    <!-- LOAN QUICK INFO -->
                                    <div class="loan-quick-info mt-4">
                                        <div class="info-badge">
                                            <i class="bi bi-person-fill text-primary"></i>
                                            <span class="info-label">@member?.Name</span>
                                        </div>
                                        <div class="info-badge">
                                            <i class="bi bi-calendar-check text-success"></i>
                                            <span class="info-label">Startdatum: @Model.Loan.StartDate.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                        </div>
                                        <div class="info-badge">
                                            <i class="bi bi-calendar-x @(isOverdue ? "text-danger" : "text-info")"></i>
                                            <span class="info-label">Förfallodatum: @Model.Loan.DueDate.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                        </div>
                                        @if (Model.Loan.ReturnDate.HasValue)
                                        {
                                            <div class="info-badge">
                                                <i class="bi bi-check-circle text-success"></i>
                                                <span class="info-label">Återlämnad: @Model.Loan.ReturnDate.Value.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                            </div>
                                        }
                                        <div class="info-badge status-@Model.Loan.Status.ToString().ToLower()">
                                            <i class="bi bi-shield-check"></i>
                                            <span class="info-label">@GetSwedishLoanStatus(Model.Loan.Status)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 text-lg-end">
                                <div class="header-actions d-flex flex-column gap-2">
                                    <a asp-action="Index" class="btn btn-outline-secondary m-1">
                                        <i class="bi bi-arrow-left mr-2"></i>
                                        Tillbaka till medlemmar
                                    </a>
                                    <div class="action-group d-flex gap-2">
                                        <a asp-action="Edit" asp-route-id="@member?.Id" class="btn btn-outline-primary m-1">
                                            <i class="bi bi-pencil mr-1"></i>
                                            Redigera
                                        </a>
                                        <a asp-action="History" asp-route-memberId="@member?.Id" class="btn btn-outline-info m-1">
                                            <i class="bi bi-clock-history mr-1"></i>
                                            Historik
                                        </a>
                                        <button class="btn btn-outline-secondary m-1" id="printLoanBtn">
                                            <i class="bi bi-printer mr-1"></i>
                                            Skriv ut
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </header>

                <!-- STATISTICS CARDS -->
                @if (Model.Statistics != null)
                {
                    <section class="loan-statistics-section mb-5">
                        <div class="row g-4">
                            <div class="col-12">
                                <h3 class="section-title">
                                    <i class="bi bi-graph-up mr-2"></i>
                                    Medlemsstatistik för @member?.Name
                                </h3>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <div class="stat-card active-loans-stat">
                                    <div class="stat-icon">
                                        <i class="bi bi-book-half"></i>
                                    </div>
                                    <div class="stat-content">
                                        <div class="stat-number text-primary" data-count="@Model.Statistics.ActiveLoans">@Model.Statistics.ActiveLoans</div>
                                        <div class="stat-label">Aktiva lån</div>
                                        <div class="stat-description">För denna medlem</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <div class="stat-card overdue-loans-stat">
                                    <div class="stat-icon">
                                        <i class="bi bi-exclamation-triangle"></i>
                                    </div>
                                    <div class="stat-content">
                                        <div class="stat-number text-danger" data-count="@Model.Statistics.OverdueLoans">@Model.Statistics.OverdueLoans</div>
                                        <div class="stat-label">Försenade lån</div>
                                        <div class="stat-description">Kräver uppmärksamhet</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <div class="stat-card returned-loans-stat">
                                    <div class="stat-icon">
                                        <i class="bi bi-check-circle"></i>
                                    </div>
                                    <div class="stat-content">
                                        <div class="stat-number text-success" data-count="@Model.Statistics.ReturnedLoans">@Model.Statistics.ReturnedLoans</div>
                                        <div class="stat-label">Återlämnade</div>
                                        <div class="stat-description">Lånens aktivitet</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-3">
                                <div class="stat-card fees-stat">
                                    <div class="stat-icon">
                                        <i class="bi bi-currency-exchange"></i>
                                    </div>
                                    <div class="stat-content">
                                        <div class="stat-number text-warning">@FormatSwedishCurrency(Model.Statistics.TotalFees)</div>
                                        <div class="stat-label">Totala avgifter</div>
                                        <div class="stat-description">Utestående belopp</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                }

                <div class="row g-4">
                    <!-- MEMBER INFORMATION CARD -->
                    <div class="col-xl-4">
                        <div class="details-card member-card">
                            <div class="card-header">
                                <h5 class="card-title">
                                    <i class="bi bi-person-circle mr-2"></i>
                                    Medlemsinformation
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="member-profile">
                                    <div class="member-avatar-large">
                                        <div class="avatar-circle-xl">
                                            <span class="avatar-initials-xl">
                                                @(member?.Name?.Split(' ').Take(2).Select(n => n.FirstOrDefault()).Aggregate("", (acc, c) => acc + c))
                                            </span>
                                        </div>
                                    </div>
                                    <div class="member-info-details">
                                        <h6 class="member-name">@member?.Name</h6>
                                        <div class="member-details">
                                            <div class="detail-row">
                                                <span class="detail-label">Medlem-ID:</span>
                                                <span class="detail-value">#@member?.Id</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">Personnummer:</span>
                                                <span class="detail-value">@member?.SSN</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">E-post:</span>
                                                <a href="mailto:@member?.Email" class="detail-value detail-link ml-1">@member?.Email</a>
                                            </div>
                                            @if (!string.IsNullOrEmpty(member?.PhoneNumber))
                                            {
                                                <div class="detail-row">
                                                    <span class="detail-label">Telefon:</span>
                                                    <a href="tel:@member?.PhoneNumber" class="detail-value detail-link">@member?.PhoneNumber</a>
                                                </div>
                                            }
                                            <div class="detail-row">
                                                <span class="detail-label">Status:</span>
                                                <span class="detail-value text-muted">@GetSwedishMembershipStatus(member.Status)</span>
                                            </div>
                                        </div>
                                        <div class="member-actions mt-3">
                                            <a asp-controller="Members" asp-action="Edit" asp-route-id="@member?.Id"
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-person mr-1"></i>
                                                Redigera medlem
                                            </a>
                                            <a asp-action="History" asp-route-memberId="@member?.Id"
                                               class="btn btn-outline-info btn-sm">
                                                <i class="bi bi-clock-history mr-1"></i>
                                                Historik
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- LOAN TIMELINE CARD -->
                        <div class="details-card timeline-card mt-4">
                            <div class="card-header">
                                <h6 class="card-title">
                                    <i class="bi bi-clock mr-2"></i>
                                    Lånetidslinje (@member?.ActiveLoansCount)
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="loan-timeline">
                                    @foreach (var loan in Model.Loans)
                                    {
                                        <div class="timeline-event">
                                            <div class="timeline-marker timeline-start">
                                                <i class="bi bi-play-circle"></i>
                                            </div>
                                            <div class="timeline-content">
                                                <div class="timeline-title text-primary">Lån startat</div>
                                                <div class="timeline-date">@loan.StartDate.ToString("dd MMM yyyy, HH:mm", new System.Globalization.CultureInfo("sv-SE"))</div>
                                            </div>
                                        </div>

                                        <div class="timeline-event">
                                            <div class="timeline-marker timeline-due">
                                                <i class="bi bi-@(isOverdue ? "exclamation-triangle" : "calendar-x")"></i>
                                            </div>
                                            <div class="timeline-content">
                                                <div class="timeline-title @(isOverdue ? "text-warning" : "text-danger")">Förfallodatum</div>
                                                <div class="timeline-date">@loan.DueDate.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</div>
                                                @if (isOverdue && @loan.DaysOverdue > 0)
                                                {
                                                    <div class="timeline-warning">@loan.DaysOverdue dagar försenat</div>
                                                }
                                            </div>
                                        </div>

                                        @if (isReturned && loan.ReturnDate.HasValue)
                                        {
                                            <div class="timeline-event">
                                                <div class="timeline-marker timeline-returned">
                                                    <i class="bi bi-check-circle"></i>
                                                </div>
                                                <div class="timeline-content">
                                                    <div class="timeline-title text-success">Återlämnat</div>
                                                    <div class="timeline-date">@(loan?.ReturnDate?.ToString("dd MMM yyyy, HH:mm", new System.Globalization.CultureInfo("sv-SE")))</div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    @if (Model.Loans.Count <= 0)
                                    {

                                        <div class="empty-books-message">
                                            <i class="bi bi-clock-history text-muted" style="font-size: 3rem;"></i>
                                            <h5>Ingen aktivitet i tidslinjen</h5>
                                            <p>Det finns för närvarande inga poster i tidslinjen.</p>
                                        </div>

                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- BOOKS INFORMATION SECTION - ENHANCED -->
                    <div class="col-xl-8">
                        <div class="details-card books-card">
                            <div class="card-header">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h5 class="card-title">
                                        <i class="bi bi-books mr-2"></i>
                                        Lånade böcker (@(Model?.BookCopyLoans?.Count ?? 0))
                                    </h5>
                                </div>
                            </div>
                            <div class="card-body">
                                @* Enhanced null checking and debugging *@
                                @if (Model.BookCopyLoans?.Any() == true)
                                {
                                    <div class="books-grid">
                                        @foreach (var bookCopyLoan in Model.BookCopyLoans.Where(bcl => bcl != null))
                                        {
                                            <div class="book-card" data-book-copy-id="@bookCopyLoan.BookCopyId">
                                                <div class="book-cover-container">
                                                    @{
                                                        var imageUrl = bookCopyLoan.BookCopy?.Details?.ImageBinary
                                                        ?? "/uploads/9780555816023.png";  // Changed fallback
                                                        var bookTitle = bookCopyLoan.BookCopy?.Details?.Title ?? "Titel saknas";
                                                    }
                                                    <img src="@imageUrl"
                                                         alt="@bookTitle"
                                                         class="book-cover"
                                                         onerror="this.src='/uploads/9780555816023.png';" />
                                                    <div class="book-overlay">
                                                        <div class="book-actions">
                                                            @if (bookCopyLoan.BookCopy?.Details?.Id != null)
                                                            {
                                                                <a asp-controller="Books" asp-action="Details"
                                                                   asp-route-id="@bookCopyLoan.BookCopy.Details.Id"
                                                                   class="btn btn-primary btn-sm" title="Visa detaljer">
                                                                    <i class="bi bi-eye"></i>
                                                                </a>
                                                                <a asp-controller="Books" asp-action="History"
                                                                   asp-route-bookId="@bookCopyLoan.BookCopy.Details.Id"
                                                                   class="btn btn-info btn-sm" title="Visa historik">
                                                                    <i class="bi bi-clock-history"></i>
                                                                </a>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="book-info">
                                                    <h6 class="book-title">@bookTitle</h6>
                                                    <p class="book-author">
                                                        av <span class="text-primary">@(bookCopyLoan.BookCopy?.Details?.Author?.Name ?? "Okänd författare")</span>
                                                    </p>
                                                    <div class="book-meta">
                                                        <div class="meta-item">
                                                            <i class="bi bi-hash"></i>
                                                            <span>Exemplar #@bookCopyLoan.BookCopyId</span>
                                                        </div>
                                                        <div class="meta-item">
                                                            <i class="bi bi-gear text-primary"></i>
                                                            <span>@(bookCopyLoan.BookCopy?.Condition ?? BookCondition.Fair)</span>
                                                        </div>
                                                        <div class="meta-item">
                                                            <i class="bi bi-geo-alt text-primary"></i>
                                                            <span>@(bookCopyLoan.BookCopy?.Location ?? "Plats ej specificerad")</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="empty-books-message">
                                        <i class="bi bi-book text-muted" style="font-size: 3rem;"></i>
                                        <h5>Inga böcker i lånet</h5>
                                        <p>Detta lån innehåller för närvarande inga böcker.</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusClass(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Active => "status-active",
            LoanStatus.Returned => "status-returned",
            LoanStatus.Overdue => "status-overdue",
            LoanStatus.Lost => "status-lost",
            LoanStatus.Cancelled => "status-cancelled",
            _ => "status-unknown"
        };
    }

    private string GetStatusIcon(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Active => "play-circle-fill",
            LoanStatus.Returned => "check-circle-fill",
            LoanStatus.Overdue => "exclamation-triangle-fill",
            LoanStatus.Lost => "x-circle-fill",
            LoanStatus.Cancelled => "slash-circle-fill",
            _ => "question-circle-fill"
        };
    }

    private string GetSwedishLoanStatus(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Active => "Aktivt",
            LoanStatus.Returned => "Återlämnat",
            LoanStatus.Overdue => "Försenat",
            LoanStatus.Lost => "Förlorat",
            LoanStatus.Cancelled => "Avbrutet",
            _ => "Okänt"
        };
    }
    private string GetSwedishMembershipStatus(MembershipStatus status)
    {
        return status switch
        {
            MembershipStatus.Active => "Aktiv",
            MembershipStatus.Suspended => "Avstängd",
            MembershipStatus.Expired => "Utgått",
            MembershipStatus.Inactive => "Inaktiv",
            MembershipStatus.Cancelled => "Avbruten",
            _ => "Okänt"
        };
    }

    private string FormatSwedishCurrency(decimal amount)
    {
        var swedishCulture = new System.Globalization.CultureInfo("sv-SE");
        var numberFormat = (System.Globalization.NumberFormatInfo)swedishCulture.NumberFormat.Clone();
        numberFormat.CurrencyPositivePattern = 3;
        numberFormat.CurrencyNegativePattern = 8;
        numberFormat.CurrencySymbol = "kr";

        return amount.ToString("C", numberFormat);
    }
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize particles
            initializeParticles();

            // Initialize typing animation
            initializeTypingAnimation();

            // Initialize book management
            initializeBookManagement();

            // Initialize print functionality
            initializePrintButton();
        });

        // Particle System
        function initializeParticles() {
            const particlesContainer = document.getElementById('headerParticles');
            if (particlesContainer) {
                for (let i = 0; i < 30; i++) {
                    const particle = document.createElement('div');
                    particle.className = 'particle';
                    particle.style.left = Math.random() * 100 + '%';
                    particle.style.animationDelay = Math.random() * 2 + 's';
                    particle.style.animationDuration = (Math.random() * 3 + 2) + 's';
                    particlesContainer.appendChild(particle);
                }
            }
        }

        // Typing Animation
        function initializeTypingAnimation() {
            const element = document.querySelector('.typing-animation');
            if (element) {
                const text = element.textContent;
                element.textContent = '';

                let i = 0;
                const timer = setInterval(() => {
                    if (i < text.length) {
                        element.textContent += text.charAt(i);
                        i++;
                    } else {
                        clearInterval(timer);
                    }
                }, 100);
            }
        }

        // Load Available Books
        function initializeBookManagement() {
            fetch('/Loans/GetAvailableBooks')
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const container = document.getElementById('availableBooks');
                    container.innerHTML = '';

                    data.books.forEach(book => {
                        const bookElement = createBookElement(book);
                        container.appendChild(bookElement);
                    });
                }
            })
            .catch(error => {
                console.error('Error loading books:', error);
            });
        }

        // Print Functionality
        function initializePrintButton() {
            const printButton = document.getElementById('printLoanBtn');
            if (printButton) {
                printButton.addEventListener('click', function() {
                    // Optional: Show loading state
                    printButton.disabled = true;
                    printButton.innerHTML = '<i class="bi bi-printer mr-1"></i> Skriver ut...';

                    // Small delay to ensure styles are applied
                    setTimeout(() => {
                        window.print();

                        // Reset button state after print dialog
                        setTimeout(() => {
                            printButton.disabled = false;
                            printButton.innerHTML = '<i class="bi bi-printer mr-1"></i> Skriv ut';
                        }, 1000);
                    }, 100);
                });
            }
        }
    </script>
}

<style>
    /* LOAN DETAILS HEADER */
    .loan-details-header {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(147, 51, 234, 0.1) 100%);
        border-radius: var(--radius-xl);
        padding: 3rem 2rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        position: relative;
        overflow: hidden;
    }

    .header-pattern {
        background: radial-gradient(circle at 20% 50%, rgba(59, 130, 246, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(147, 51, 234, 0.1) 0%, transparent 50%), radial-gradient(circle at 40% 80%, rgba(16, 185, 129, 0.1) 0%, transparent 50%);
        animation: patternMove 20s ease-in-out infinite;
    }

    @@keyframes patternMove {
        0%, 100% {
            transform: translateX(0) translateY(0);
        }

        25% {
            transform: translateX(1%) translateY(-1%);
        }

        50% {
            transform: translateX(-1%) translateY(1%);
        }

        75% {
            transform: translateX(1%) translateY(1%);
        }
    }

    .header-particles {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }

    .particle {
        position: absolute;
        width: 4px;
        height: 4px;
        background: rgba(59, 130, 246, 0.3);
        border-radius: 50%;
        animation: float 3s ease-in-out infinite;
    }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0) rotate(0deg);
            opacity: 0;
        }

        50% {
            transform: translateY(-20px) rotate(180deg);
            opacity: 1;
        }
    }

    .loan-header-title {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* STATUS ICON */
    .loan-status-icon {
        position: relative;
        display: inline-block;
    }

    .status-icon-wrapper {
        position: relative;
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        color: white;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        animation: iconBounce 2s ease-in-out infinite;
    }

        .status-icon-wrapper.status-active {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        }

        .status-icon-wrapper.status-returned {
            background: linear-gradient(135deg, var(--success-color) 0%, #059669 100%);
        }

        .status-icon-wrapper.status-overdue {
            background: linear-gradient(135deg, var(--danger-color) 0%, #dc2626 100%);
        }

    .status-pulse {
        position: absolute;
        top: -10px;
        left: -10px;
        right: -10px;
        bottom: -10px;
        border: 2px solid currentColor;
        border-radius: 50%;
        animation: pulse 2s infinite;
        opacity: 0.6;
    }

    .warning-indicator {
        position: absolute;
        top: -5px;
        right: -5px;
        width: 30px;
        height: 30px;
        background: var(--warning-color);
        border-radius: 50%;
        border: 3px solid white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.8rem;
        animation: warning-pulse 1s ease-in-out infinite alternate;
    }

    @@keyframes warning-pulse {
        from {
            transform: scale(1);
        }

        to {
            transform: scale(1.1);
        }
    }

    @@keyframes iconBounce {
        0%, 100% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
            opacity: 0.6;
        }

        50% {
            transform: scale(1.1);
            opacity: 0.3;
        }

        100% {
            transform: scale(1);
            opacity: 0.6;
        }
    }

    /* QUICK INFO BADGES */
    .loan-quick-info {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        margin-top: 1.5rem;
    }

    .info-badge {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.05rem .5rem;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        font-size: 0.9rem;
        font-weight: 500;
        transition: all var(--transition-normal);
    }

        .info-badge:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .info-badge.status-active {
            background: rgba(59, 130, 246, 0.1);
            border-color: rgba(59, 130, 246, 0.3);
            color: var(--primary-color);
        }

        .info-badge.status-overdue {
            background: rgba(239, 68, 68, 0.1);
            border-color: rgba(239, 68, 68, 0.3);
            color: var(--danger-color);
        }

        .info-badge.status-returned {
            background: rgba(16, 185, 129, 0.1);
            border-color: rgba(16, 185, 129, 0.3);
            color: var(--success-color);
        }

    /* STATUS CIRCLE DISPLAY */
    .loan-status-display {
        display: flex;
        justify-content: center;
        margin-bottom: 2rem;
    }

    .status-circle {
        width: 180px;
        height: 180px;
        margin-top: 20px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        position: relative;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        transition: transform var(--transition-normal);
    }

        .status-circle:hover {
            transform: scale(1.05);
        }

        .status-circle.status-active {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        }

        .status-circle.status-returned {
            background: linear-gradient(135deg, var(--success-color) 0%, #059669 100%);
        }

        .status-circle.status-overdue {
            background: linear-gradient(135deg, var(--danger-color) 0%, #dc2626 100%);
        }

    .status-inner {
        text-align: center;
    }

    .status-text {
        font-size: 1.2rem;
        display: block;
        margin-bottom: 0.5rem;
    }

    .overdue-days {
        font-size: 0.9rem;
        opacity: 0.9;
    }

    .fee-amount {
        font-size: 1.1rem;
        font-weight: 700;
        margin-top: 0.5rem;
    }

    /* STATISTICS SECTION */
    .loan-statistics-section {
        background: rgba(248, 250, 252, 0.8);
        border-radius: var(--radius-xl);
        padding: 2rem;
        border: 1px solid rgba(229, 231, 235, 0.5);
        backdrop-filter: blur(10px);
    }

    .section-title {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 1.5rem;
    }

    .stat-card {
        background: rgba(255, 255, 255, 0.9);
        border-radius: var(--radius-lg);
        padding: 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.3);
        transition: all var(--transition-normal);
        height: 100%;
        display: flex;
        align-items: center;
        gap: 1rem;
        backdrop-filter: blur(10px);
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-xl);
        }

    .active-loans-stat .stat-icon {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
    }

    .overdue-loans-stat .stat-icon {
        background: linear-gradient(135deg, var(--danger-color), #dc2626);
    }

    .returned-loans-stat .stat-icon {
        background: linear-gradient(135deg, var(--success-color), #059669);
    }

    .fees-stat .stat-icon {
        background: linear-gradient(135deg, var(--warning-color), #d97706);
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: white;
        flex-shrink: 0;
        animation: iconPulse 2s ease-in-out infinite;
    }

    @@keyframes iconPulse {
        0%, 100% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }
    }

    .stat-number {
        font-size: 1.8rem;
        font-weight: 700;
        color: var(--gray-800);
        margin-bottom: 0.25rem;
    }

    .stat-label {
        color: var(--gray-600);
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .stat-description {
        color: var(--gray-500);
        font-size: 0.75rem;
    }

    /* DETAILS CARDS */
    .details-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: var(--radius-xl);
        box-shadow: var(--shadow-md);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all var(--transition-normal);
        margin-bottom: 1.5rem;
    }

        .details-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .details-card .card-header {
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(147, 51, 234, 0.05) 100%);
            border-bottom: 1px solid rgba(59, 130, 246, 0.1);
            border-radius: var(--radius-xl) var(--radius-xl) 0 0;
            padding: 1.5rem;
        }

    .card-title {
        color: var(--primary-color);
        font-weight: 600;
        margin: 0;
    }

    /* MEMBER PROFILE */
    .member-profile {
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        margin-bottom: 1.5rem;
        gap: 1.5rem;
    }

    .member-avatar-large {
        flex-shrink: 0;
    }

    .avatar-circle-xl {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.8rem;
        font-weight: 600;
        box-shadow: var(--shadow-lg);
        animation: avatarGlow 3s ease-in-out infinite alternate;
    }

    @@keyframes avatarGlow {
        from {
            box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
        }

        to {
            box-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
        }
    }

    .member-name {
        font-size: 1.3rem;
        font-weight: 600;
        color: var(--gray-800);
        margin-bottom: 1rem;
    }

    .member-details {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 0;
        border-bottom: 1px solid var(--gray-100);
    }

    .detail-label {
        font-size: 0.9rem;
        color: var(--gray-600);
        font-weight: 500;
    }

    .detail-value {
        font-size: 0.95rem;
        color: var(--gray-800);
        font-weight: 600;
    }

    .detail-link {
        color: var(--primary-color);
        text-decoration: none;
        transition: color var(--transition-fast);
    }

        .detail-link:hover {
            color: var(--primary-dark);
            text-decoration: underline;
        }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: var(--radius-sm);
        font-size: 0.8rem;
        font-weight: 600;
        background: var(--gray-200);
        color: var(--gray-700);
    }

    .member-actions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    /* LOAN TIMELINE */
    .loan-timeline {
        position: relative;
        padding-left: 2rem;
    }

        .loan-timeline::before {
            content: '';
            position: absolute;
            left: 0.75rem;
            top: 0;
            bottom: 0;
            width: 3px;
            background: linear-gradient(to bottom, var(--primary-color), var(--success-color));
        }

    .timeline-event {
        position: relative;
        margin-bottom: 2rem;
        opacity: 0;
        transform: translateX(-20px);
        animation: timelineSlideIn 0.6s ease-out forwards;
    }

        .timeline-event:nth-child(1) {
            animation-delay: 0.1s;
        }

        .timeline-event:nth-child(2) {
            animation-delay: 0.3s;
        }

        .timeline-event:nth-child(3) {
            animation-delay: 0.5s;
        }

    @@keyframes timelineSlideIn {
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .timeline-marker {
        position: absolute;
        left: -2rem;
        top: 0.5rem;
        width: 1.5rem;
        height: 1.5rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.8rem;
        color: white;
        border: 3px solid white;
        z-index: 1;
    }

    .timeline-start {
        background: var(--primary-color);
    }

    .timeline-due {
        background: var(--warning-color);
    }

    .timeline-overdue {
        background: var(--danger-color);
        animation: warningBlink 1s ease-in-out infinite alternate;
    }

    .timeline-returned {
        background: var(--success-color);
    }

    @@keyframes warningBlink {
        from {
            opacity: 1;
        }

        to {
            opacity: 0.7;
        }
    }

    .timeline-content {
        background: rgba(255, 255, 255, 0.9);
        border-radius: var(--radius-lg);
        padding: 1rem;
        border: 1px solid rgba(229, 231, 235, 0.5);
        margin-left: 1rem;
    }

    .timeline-title {
        font-size: 1rem;
        font-weight: 600;
        color: var(--gray-800);
        margin-bottom: 0.25rem;
    }

    .timeline-date {
        font-size: 0.85rem;
        color: var(--gray-600);
    }

    .timeline-warning {
        font-size: 0.8rem;
        color: var(--danger-color);
        font-weight: 600;
        margin-top: 0.25rem;
    }

    /* BOOKS GRID */
    .books-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.5rem;
        min-height: 200px;
        padding-bottom: 20px;
    }

    .book-card {
        background: rgba(229, 231, 235, 0.2);
        border-radius: var(--radius-lg);
        overflow: hidden;
        transition: all var(--transition-normal);
        border: 1px solid rgba(229, 231, 235, 0.9);
        position: relative;
        display: block;
        opacity: 1;
    }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-xl);
        }

    .book-cover-container {
        position: relative;
        height: 200px;
        overflow: hidden;
    }

    .book-cover {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform var(--transition-normal);
    }

    .book-card:hover .book-cover {
        transform: scale(1.05);
    }

    .book-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity var(--transition-normal);
    }

    .book-card:hover .book-overlay {
        opacity: 1;
    }

    .book-actions {
        display: flex;
        gap: 0.5rem;
    }

    .book-info {
        padding: 1.5rem;
    }

    .book-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--gray-800);
        margin-bottom: 0.5rem;
        line-height: 1.3;
    }

    .book-author {
        font-size: 0.9rem;
        color: var(--gray-600);
        margin-bottom: 1rem;
    }

    .book-meta {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.8rem;
        color: var(--gray-600);
    }

    /* LOAN DETAILS GRID */
    .loan-details-grid {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .detail-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem;
        background: rgba(248, 250, 252, 0.8);
        border-radius: var(--radius-md);
        border: 1px solid rgba(229, 231, 235, 0.5);
        transition: all var(--transition-fast);
    }

        .detail-item:hover {
            background: rgba(59, 130, 246, 0.05);
            border-color: rgba(59, 130, 246, 0.2);
        }

        .detail-item.fee-item {
            background: rgba(239, 68, 68, 0.05);
            border-color: rgba(239, 68, 68, 0.2);
        }

    .fee-amount {
        color: white;
        font-weight: 700;
    }

    .status-active {
        color: var(--primary-color);
        font-weight: 600;
    }

    .status-returned {
        color: var(--success-color);
        font-weight: 600;
    }

    .status-overdue {
        color: var(--danger-color);
        font-weight: 600;
    }

    /* NOTES SECTION */
    .notes-section {
        background: rgba(248, 250, 252, 0.8);
        border-radius: var(--radius-lg);
        padding: 1.5rem;
        border: 1px solid rgba(229, 231, 235, 0.5);
    }

    .notes-content {
        background: white;
        padding: 1rem;
        border-radius: var(--radius-md);
        border: 1px solid var(--gray-200);
        margin-bottom: 1rem;
        white-space: pre-wrap;
        line-height: 1.5;
    }

    .no-notes {
        font-style: italic;
        text-align: center;
        padding: 2rem 1rem;
    }

    /* EMPTY STATES */
    .empty-books-message {
        text-align: center;
        padding: 3rem 2rem;
        color: var(--gray-500);
        border: 2px dashed var(--gray-200);
        border-radius: var(--radius-lg);
        background: rgba(248, 250, 252, 0.5);
    }

        .empty-books-message i {
            font-size: 3rem;
            color: var(--gray-300);
            margin-bottom: 1rem;
        }

        .empty-books-message h5 {
            color: var(--gray-600);
            margin-bottom: 0.5rem;
        }

    /* AVAILABLE BOOKS MODAL */
    .available-books-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1rem;
        max-height: 400px;
        overflow-y: auto;
    }

    .available-book-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: rgba(248, 250, 252, 0.8);
        border-radius: var(--radius-lg);
        border: 1px solid rgba(229, 231, 235, 0.5);
        transition: all var(--transition-normal);
    }

        .available-book-item:hover {
            background: rgba(59, 130, 246, 0.05);
            border-color: rgba(59, 130, 246, 0.2);
            transform: translateY(-2px);
        }

    .book-cover-mini {
        width: 50px;
        height: 70px;
        border-radius: var(--radius-sm);
        overflow: hidden;
        flex-shrink: 0;
    }

        .book-cover-mini img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .book-info-mini {
        flex: 1;
        min-width: 0;
    }

    .book-title-mini {
        font-size: 0.95rem;
        font-weight: 600;
        color: var(--gray-800);
        margin-bottom: 0.25rem;
        line-height: 1.3;
    }

    .book-author-mini {
        font-size: 0.8rem;
        color: var(--gray-600);
        margin-bottom: 0.25rem;
    }

    .book-condition {
        font-size: 0.75rem;
        color: var(--gray-500);
        background: var(--gray-100);
        padding: 0.25rem 0.5rem;
        border-radius: var(--radius-sm);
    }

    /* RESPONSIVE DESIGN */
    @@media (max-width: 768px) {
        .loan-details-header {
            padding: 2rem 1rem;
        }

        .loan-quick-info {
            flex-direction: column;
        }

        .member-profile {
            flex-direction: column;
            text-align: center;
        }

        .books-grid {
            grid-template-columns: 1fr;
        }

        .available-books-grid {
            grid-template-columns: 1fr;
        }

        .status-circle {
            width: 150px;
            height: 150px;
        }

        .stat-card {
            flex-direction: column;
            text-align: center;
        }
    }

    /* PRINT STYLES */
    @@media print {
        /* Hide interactive elements */
        .header-actions, .btn, .book-overlay, .book-actions, .header-particles, .status-pulse {
            display: none !important;
        }
        /* Remove backgrounds and shadows for print */
        .loan-details-header {
            background: none !important;
            box-shadow: none !important;
            border: 1px solid #ccc !important;
        }

        .details-card {
            box-shadow: none !important;
            border: 1px solid var(--gray-300) !important;
            break-inside: avoid;
        }
        /* Ensure good contrast for print */
        .loan-header-title {
            -webkit-text-fill-color: #000 !important;
            color: #000 !important;
        }
        /* Optimize spacing for print */
        .loan-details-container {
            padding: 0 !important;
        }
        /* Ensure timeline prints properly */
        .timeline-event {
            break-inside: avoid;
        }
        /* Make sure book cards print nicely */
        .book-card {
            break-inside: avoid;
            margin-bottom: 1rem;
        }
    }
 
    /* ACCESSIBILITY */
    @@media (prefers-reduced-motion: reduce) {
        *, *::before, *::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
    }

    /* LOADING STATES */
    .loading {
        opacity: 0.6;
        pointer-events: none;
        position: relative;
    }

        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid var(--primary-color);
            border-top-color: transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }
</style>


