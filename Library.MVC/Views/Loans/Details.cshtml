@using Library.Domain.Entities
@using Library.Domain.Enums
@model Library.MVC.ViewModels.LoanViewModel

@{
    ViewData["Title"] = $"Lånedetaljer - #{Model.Loan.Id}";
    var bookCopyLoans = Model.Loan?.BookCopyLoans ?? new List<BookCopyLoan>();
    var statistics = Model.Statistics;
    var member = Model.Loan.Member;
}

@Html.AntiForgeryToken()

<!-- Modern lånedetaljer container -->
<div class="container-fluid px-4 py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-xl-11">
            <!-- Kreativ rubriksektion -->
            <div class="loan-details-header mb-5 position-relative overflow-hidden">
                <!-- Bakgrundsmönster -->
                <div class="header-pattern position-absolute w-100 h-100"></div>

                <div class="position-relative z-2">
                    <div class="row align-items-center">
                        <div class="col-lg-8">
                            <div class="loan-icon mb-3">
                                <div class="icon-wrapper">
                                    <i class="bi bi-journal-bookmark"></i>
                                    <div class="status-indicator @GetStatusClass(Model.Loan.Status)">
                                        <i class="@GetStatusIcon(Model.Loan.Status)"></i>
                                    </div>
                                </div>
                            </div>

                            <h1 class="display-6 fw-bold mb-2 pb-1 header-title">Lånedetaljer</h1>
                            <p class="text-muted mb-3 fs-5">Lån #@Model.Loan.Id - <span class="badge bg-@GetStatusBadgeClass(Model.Loan.Status) text-white">@GetSwedishLoanStatus(Model.Loan.Status)</span></p>

                            <!-- Snabbstatistik -->
                            <div class="quick-stats d-flex flex-wrap gap-3">
                                <div class="stat-item m-1">
                                    <i class="bi bi-calendar-event mr-2"></i>
                                    <span class="stat-label">Startad:</span>
                                    <span class="stat-value">@Model.Loan.StartDate.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                </div>
                                <div class="stat-item m-1">
                                    <i class="bi bi-calendar-check mr-2"></i>
                                    <span class="stat-label">Förfaller:</span>
                                    <span class="stat-value @(Model.Loan.IsOverdue ? "text-danger" : "")">
                                        @Model.Loan.DueDate.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))
                                    </span>
                                </div>
                                @if (Model.Loan.ReturnDate.HasValue)
                                {
                                    <div class="stat-item m-1">
                                        <i class="bi bi-calendar-x mr-2"></i>
                                        <span class="stat-label">Återlämnad:</span>
                                        <span class="stat-value">@Model.Loan.ReturnDate.Value.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                    </div>
                                }
                                <div class="stat-item m-1">
                                    <i class="bi bi-currency-exchange mr-2"></i>
                                    <span class="stat-label">Avgift:</span>
                                    <span class="stat-value @(Model.Loan.Fee > 0 ? "text-danger" : "text-success")">
                                        @FormatSwedishCurrency(Model.Loan.Fee)
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4 text-lg-end">
                            <div class="header-actions d-flex flex-column gap-2">
                                <a asp-action="Index" class="btn btn-outline-secondary m-1">
                                    <i class="bi bi-arrow-left mr-2"></i>
                                    Tillbaka till lån
                                </a>
                                <div class="action-group d-flex gap-2">
                                    <button onclick="generateLoanReport(@Model.Loan.Id)" class="btn btn-outline-info m-1">
                                        <i class="bi bi-file-text mr-1"></i>
                                        Rapport
                                    </button>
                                    <a asp-action="Edit" asp-route-id="@Model.Loan.Id" class="btn btn-outline-secondary m-1">
                                        <i class="bi bi-pencil mr-1"></i>
                                        Redigera
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row g-4">
                <!-- Medlemsinformationskort -->
                <div class="col-12 col-lg-4">
                    <div class="info-card member-card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-person-circle mr-2"></i>
                                Medlemsinformation
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="member-avatar-section text-center mb-4">
                                <div class="member-avatar-large">
                                    <span class="avatar-initials">
                                        @if (!string.IsNullOrEmpty(member?.Name))
                                        {
                                            @string.Join("", member.Name.Split(' ').Select(n => n.FirstOrDefault()).Take(2))
                                        }
                                    </span>
                                </div>
                                <h6 class="member-name mt-3 mb-1">@(member?.Name ?? "Okänd medlem")</h6>
                                <p class="member-email text-muted">@member?.Email</p>
                            </div>

                            <div class="member-details">
                                <div class="detail-row">
                                    <span class="detail-label">Medlems-Id:</span>
                                    <span class="detail-value">#@member?.Id</span>
                                </div>
                                <div class="detail-row">
                                    <span class="detail-label">Personnummer:</span>
                                    <span class="detail-value">@member?.SSN</span>
                                </div>
                                <div class="detail-row">
                                    <span class="detail-label">Telefon:</span>
                                    <span class="detail-value">@(member?.PhoneNumber ?? "Ej angivet")</span>
                                </div>
                                @if (!string.IsNullOrEmpty(member?.Address))
                                {
                                    <div class="detail-row">
                                        <span class="detail-label">Adress:</span>
                                        <span class="detail-value">@member.Address</span>
                                    </div>
                                }
                                <div class="detail-row">
                                    <span class="detail-label">Medlemsstatus:</span>
                                    <span class="detail-value">
                                        <span class="badge bg-@(member?.Status == MembershipStatus.Active ? "success" : "warning") text-white">
                                            @GetSwedishMembershipStatus(member?.Status)
                                        </span>
                                    </span>
                                </div>
                                <div class="detail-row">
                                    <span class="detail-label">Aktiva lån:</span>
                                    <span class="detail-value">@(Model.Statistics.ActiveLoans) / @(member?.MaxLoans ?? 3)</span>
                                </div>
                                <div class="detail-row">
                                    <span class="detail-label">Medlem sedan:</span>
                                    <span class="detail-value">@member?.MembershipStartDate.ToString("MMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                </div>
                            </div>

                            <div class="member-actions mt-4">
                                <a asp-controller="Members" asp-action="Details" asp-route-id="@member?.Id"
                                   class="btn btn-outline-primary btn-sm w-100">
                                    <i class="bi bi-eye mr-2"></i>
                                    Visa medlemsprofil
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Lånedetaljer och böcker -->
                <div class="col-12 col-lg-8">
                    <!-- Låneinformationskort -->
                    <div class="info-card loan-info-card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-info-circle mr-2"></i>
                                Låneinformation
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="info-icon">
                                            <i class="bi bi-hash"></i>
                                        </div>
                                        <div class="info-content">
                                            <span class="info-label">Lån-ID</span>
                                            <span class="info-value">#@Model.Loan.Id</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="info-icon">
                                            <i class="bi bi-flag"></i>
                                        </div>
                                        <div class="info-content">
                                            <span class="info-label">Status</span>
                                            <span class="info-value">
                                                <span class="badge bg-@GetStatusBadgeClass(Model.Loan.Status) text-white">
                                                    @GetSwedishLoanStatus(Model.Loan.Status)
                                                </span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="info-icon">
                                            <i class="bi bi-calendar-plus"></i>
                                        </div>
                                        <div class="info-content">
                                            <span class="info-label">Startdatum</span>
                                            <span class="info-value">@Model.Loan.StartDate.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="info-icon">
                                            <i class="bi bi-calendar-check"></i>
                                        </div>
                                        <div class="info-content">
                                            <span class="info-label">Förfallodatum</span>
                                            <span class="info-value @(Model.Loan.IsOverdue ? "text-danger fw-bold" : "")">
                                                @Model.Loan.DueDate.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("sv-SE"))
                                                @if (Model.Loan.IsOverdue)
                                                {
                                                    <span class="badge bg-danger ml-2 text-white">@Model.Loan.DaysOverdue dagar försenat</span>
                                                }
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                @if (Model.Loan.ReturnDate.HasValue)
                                {
                                    <div class="col-md-6">
                                        <div class="info-item">
                                            <div class="info-icon">
                                                <i class="bi bi-calendar-x"></i>
                                            </div>
                                            <div class="info-content">
                                                <span class="info-label">Återlämningsdatum</span>
                                                <span class="info-value">@Model.Loan.ReturnDate.Value.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("sv-SE"))</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="info-icon">
                                            <i class="bi bi-currency-exchange"></i>
                                        </div>
                                        <div class="info-content">
                                            <span class="info-label">Förseningsavgift</span>
                                            <span class="info-value @(Model.Loan.Fee > 0 ? "text-danger fw-bold" : "text-success")">
                                                @FormatSwedishCurrency(Model.Loan.Fee)
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="info-icon">
                                            <i class="bi bi-book"></i>
                                        </div>
                                        <div class="info-content">
                                            <span class="info-label">Totalt antal böcker</span>
                                            <span class="info-value">@Model.Loan.TotalBooks</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="info-icon">
                                            <i class="bi bi-clock"></i>
                                        </div>
                                        <div class="info-content">
                                            <span class="info-label">Varaktighet</span>
                                            <span class="info-value">
                                                @if (Model.Loan.ReturnDate.HasValue)
                                                {
                                                    @((Model.Loan.ReturnDate.Value - Model.Loan.StartDate).Days) @:dagar
                                                }
                                                else
                                                {
                                                    @((DateTime.Now - Model.Loan.StartDate).Days)
                                                    @:dagar (pågående)
                                                }
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.Loan.Notes))
                            {
                                <div class="loan-notes mt-4">
                                    <h6 class="notes-title">
                                        <i class="bi bi-chat-text mr-2"></i>
                                        Anteckningar
                                    </h6>
                                    <div class="notes-content">
                                        @Model.Loan.Notes
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Lånade böcker kort -->
                    <div class="info-card books-card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-book mr-2"></i>
                                Lånade böcker (@(bookCopyLoans?.Count() ?? 0))
                            </h5>
                        </div>
                        <div class="card-body">
                            @if (bookCopyLoans != null && bookCopyLoans.Any())
                            {
                                <div class="books-grid">
                                    @foreach (var bookCopyLoan in bookCopyLoans)
                                    {
                                        <div class="book-item">
                                            <div class="book-cover">
                                                <img src="@(bookCopyLoan.BookCopy?.Details?.ImageBinary ?? "/uploads/9780555816023.png")"
                                                     alt="@bookCopyLoan.BookCopy?.Details?.Title"
                                                     class="cover-image" />
                                                <div class="book-overlay">
                                                    <div class="copy-info">
                                                        <span class="copy-id">Exemplar #@bookCopyLoan.BookCopyId</span>
                                                        <span class="copy-condition">@GetSwedishCondition(bookCopyLoan.BookCopy?.Condition)</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="book-details">
                                                <h6 class="book-title">@bookCopyLoan.BookCopy?.Details?.Title</h6>
                                                <p class="book-author">av @(bookCopyLoan.BookCopy?.Details?.Author?.Name ?? "Okänd författare")</p>
                                                <div class="book-meta">
                                                    <span class="meta-item">
                                                        <i class="bi bi-bookmark mr-1"></i>
                                                        ISBN: @bookCopyLoan.BookCopy?.Details?.ISBN
                                                    </span>
                                                    @if (!string.IsNullOrEmpty(bookCopyLoan.BookCopy?.Location))
                                                    {
                                                        <span class="meta-item">
                                                            <i class="bi bi-geo-alt mr-1"></i>
                                                            @bookCopyLoan.BookCopy.Location
                                                        </span>
                                                    }
                                                    @if (bookCopyLoan.BookCopy?.PurchasePrice.HasValue == true)
                                                    {
                                                        <span class="meta-item">
                                                            <i class="bi bi-tag mr-1"></i>
                                                            @FormatSwedishCurrency(bookCopyLoan.BookCopy.PurchasePrice.Value)
                                                        </span>
                                                    }
                                                </div>
                                                <div class="book-actions mt-2">
                                                    <a asp-controller="Books" asp-action="Details" asp-route-id="@bookCopyLoan.BookCopy?.Details?.Id"
                                                       class="btn btn-outline-primary btn-sm">
                                                        <i class="bi bi-eye mr-1"></i>
                                                        Visa bok
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="empty-state text-center py-4">
                                    <i class="bi bi-inbox fs-1 text-muted"></i>
                                    <p class="text-muted">Inga böcker hittades för detta lån</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Åtgärdsknappar -->
            <div class="loan-actions mt-5 pt-4 border-top">
                <div class="row g-3">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6 text-md-end">
                        <div class="d-flex gap-2 flex-wrap justify-content-md-end">
                            <button class="btn btn-outline-info m-1" onclick="generateLoanReport(@Model.Loan.Id)">
                                <i class="bi bi-file-text mr-2"></i>
                                Generera rapport
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary m-1">
                                <i class="bi bi-arrow-left mr-2"></i>
                                Tillbaka till lån
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusClass(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Active => "status-active",
            LoanStatus.Returned => "status-returned",
            LoanStatus.Overdue => "status-overdue",
            LoanStatus.Lost => "status-lost",
            LoanStatus.Cancelled => "status-cancelled",
            _ => "status-unknown"
        };
    }

    private string GetStatusIcon(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Active => "bi bi-play-circle",
            LoanStatus.Returned => "bi bi-check-circle",
            LoanStatus.Overdue => "bi bi-exclamation-circle",
            LoanStatus.Lost => "bi bi-x-circle",
            LoanStatus.Cancelled => "bi bi-slash-circle",
            _ => "bi bi-question-circle"
        };
    }

    private string GetStatusBadgeClass(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Active => "primary",
            LoanStatus.Returned => "success",
            LoanStatus.Overdue => "danger",
            LoanStatus.Lost => "dark",
            LoanStatus.Cancelled => "secondary",
            _ => "light"
        };
    }

    private string GetSwedishLoanStatus(LoanStatus status)
    {
        return status switch
        {
            LoanStatus.Active => "Aktiv",
            LoanStatus.Returned => "Återlämnad",
            LoanStatus.Overdue => "Försenad",
            LoanStatus.Lost => "Förlorad",
            LoanStatus.Cancelled => "Avbruten",
            _ => "Okänd"
        };
    }

    private string GetSwedishMembershipStatus(MembershipStatus? status)
    {
        return status switch
        {
            MembershipStatus.Active => "Aktiv",
            MembershipStatus.Suspended => "Avstängd",
            MembershipStatus.Expired => "Utgått",
            MembershipStatus.Inactive => "Inaktiv",
            MembershipStatus.Cancelled => "Avbruten",
            _ => "Okänt"
        };
    }

    private string GetSwedishCondition(BookCondition? condition)
    {
        return condition switch
        {
            BookCondition.New => "Ny",
            BookCondition.Excellent => "Utmärkt",
            BookCondition.Good => "Bra",
            BookCondition.Fair => "Acceptabel",
            BookCondition.Poor => "Dålig",
            _ => "Okänd"
        };
    }

    private string FormatSwedishCurrency(decimal amount)
    {
        // Svensk krona formatering: 1.234,56 kr
        var swedishCulture = new System.Globalization.CultureInfo("sv-SE");
        var numberFormat = (System.Globalization.NumberFormatInfo)swedishCulture.NumberFormat.Clone();
        numberFormat.CurrencyPositivePattern = 3; // n $ (nummer mellanslag valuta)
        numberFormat.CurrencyNegativePattern = 8; // -n $ (negativt nummer mellanslag valuta)
        numberFormat.CurrencySymbol = "kr";

        return amount.ToString("C", numberFormat);
    }
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Konfigurera toastr
        toastr.options = {
            closeButton: true,
            newestOnTop: true,
            progressBar: true,
            positionClass: "toast-top-right",
            timeOut: "3500"
        };

        // ====================================================================
        // LÅNEÅTGÄRDER
        // ====================================================================

        async function generateLoanReport(Id) {
            try {
                const response = await fetch(`/Loans/GenerateReport/${Id}`);
                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = `lånerapport_${Id}_${new Date().toISOString().split('T')[0]}.txt`;
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                    window.URL.revokeObjectURL(url);
                    toastr.success('Rapport genererad framgångsrikt');
                } else {
                    toastr.error('Misslyckades med att generera rapport');
                }
            } catch (error) {
                console.error('Fel vid generering av rapport:', error);
                toastr.error('Misslyckades med att generera rapport');
            }
        }

        // ====================================================================
        // HJÄLPFUNKTIONER
        // ====================================================================

        function getAntiForgeryToken() {
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            return token ? token.value : '';
        }

        // ====================================================================
        // INITIALISERING
        // ====================================================================

        document.addEventListener('DOMContentLoaded', function() {
            // Visa framgångs-/felmeddelanden från TempData
            @if (TempData["Success"] != null)
            {
                <text>toastr.success('@TempData["Success"]');</text>
            }

            @if (TempData["Error"] != null)
            {
                <text>toastr.error('@TempData["Error"]');</text>
            }

            // Animera element vid laddning
            const bookItems = document.querySelectorAll('.book-item');
            bookItems.forEach((item, index) => {
                setTimeout(() => {
                    item.classList.add('loaded');
                }, index * 100);
            });
        });
    </script>
}

<style>
    /* Rubrikstyling */
    .loan-details-header {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(147, 51, 234, 0.1) 100%);
        border-radius: var(--radius-xl);
        padding: 3rem 2rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-pattern {
        background: radial-gradient(circle at 20% 50%, rgba(59, 130, 246, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(147, 51, 234, 0.1) 0%, transparent 50%), radial-gradient(circle at 40% 80%, rgba(16, 185, 129, 0.1) 0%, transparent 50%);
    }

    .header-title {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* Låneikon med status */
    .loan-icon {
        position: relative;
        display: inline-block;
    }

    .icon-wrapper {
        position: relative;
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        color: white;
        box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
    }

    .status-indicator {
        position: absolute;
        bottom: -5px;
        right: -5px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        color: white;
        border: 3px solid white;
    }

    .status-active {
        background: var(--primary-color);
    }

    .status-returned {
        background: var(--success-color);
    }

    .status-overdue {
        background: var(--danger-color);
    }

    .status-lost {
        background: var(--gray-600);
    }

    .status-cancelled {
        background: var(--gray-400);
    }

    /* Snabbstatistik */
    .quick-stats {
        margin-top: 1.5rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.05rem .5rem;
        background: rgba(255, 255, 255, 0.8);
        // border-radius: var(--radius-sm);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        font-size: 0.9rem;
    }

    .stat-label {
        font-weight: 500;
        color: var(--gray-600);
    }

    .stat-value {
        font-weight: 700;
        color: var(--gray-800);
    }

    /* Infokort */
    .info-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: var(--radius-xl);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all var(--transition-normal);
    }

        .info-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .info-card .card-header {
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(147, 51, 234, 0.05) 100%);
            border-bottom: 1px solid rgba(59, 130, 246, 0.1);
            border-radius: var(--radius-xl) var(--radius-xl) 0 0;
            padding: 1.5rem;
        }

        .info-card .card-title {
            color: var(--primary-color);
            font-weight: 600;
        }

    /* Medlemsavatar */
    .member-avatar-large {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
    }

    .avatar-initials {
        font-size: 1.8rem;
        font-weight: 700;
        color: white;
    }

    .member-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--gray-800);
    }

    .member-email {
        font-size: 0.9rem;
    }

    /* Detaljrader */
    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
        border-bottom: 1px solid var(--gray-100);
    }

        .detail-row:last-child {
            border-bottom: none;
        }

    .detail-label {
        font-weight: 500;
        color: var(--gray-600);
        font-size: 0.9rem;
    }

    .detail-value {
        font-weight: 600;
        color: var(--gray-800);
        font-size: 0.9rem;
    }

    /* Infoobjekt */
    .info-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.8);
        border-radius: var(--radius-lg);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .info-icon {
        width: 40px;
        height: 40px;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.2rem;
        flex-shrink: 0;
    }

    .info-content {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .info-label {
        font-size: 0.8rem;
        font-weight: 500;
        color: var(--gray-600);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .info-value {
        font-size: 1rem;
        font-weight: 600;
        color: var(--gray-800);
    }

    /* Låneanteckningar */
    .loan-notes {
        background: rgba(248, 250, 252, 0.8);
        border-radius: var(--radius-lg);
        padding: 1.5rem;
        border: 1px solid var(--gray-200);
    }

    .notes-title {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .notes-content {
        color: var(--gray-700);
        line-height: 1.6;
        /* white-space: pre-wrap;*/   
    }

    /* Bokrutnät */
    .books-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.5rem;
    }

    .book-item {
        background: rgba(255, 255, 255, 0.9);
        border-radius: var(--radius-lg);
        padding: 1.5rem;
        border: 1px solid var(--gray-200);
        transition: all var(--transition-normal);
        opacity: 0;
        transform: translateY(20px);
    }

        .book-item.loaded {
            opacity: 1;
            transform: translateY(0);
        }

        .book-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

    .book-cover {
        position: relative;
        width: 80px;
        height: 120px;
        margin: 0 auto 1rem;
        border-radius: var(--radius-md);
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .cover-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .book-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.7));
        display: flex;
        align-items: flex-end;
        padding: 0.5rem;
        opacity: 0;
        transition: all var(--transition-normal);
    }

    .book-item:hover .book-overlay {
        opacity: 1;
    }

    .copy-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .copy-id, .copy-condition {
        font-size: 0.7rem;
        font-weight: 600;
        color: white;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    }

    .book-title {
        font-size: 1rem;
        font-weight: 600;
        color: var(--gray-800);
        margin-bottom: 0.5rem;
        line-height: 1.3;
    }

    .book-author {
        font-size: 0.9rem;
        color: var(--gray-600);
        margin-bottom: 0.75rem;
    }

    .book-meta {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        margin-bottom: 1rem;
    }

    .meta-item {
        font-size: 0.8rem;
        color: var(--gray-500);
        display: flex;
        align-items: center;
    }

    /* Responsiv design */
    @@media (max-width: 768px) {
        .loan-details-header {
            padding: 2rem 1rem;
        }

        .quick-stats {
            flex-direction: column;
        }

        .books-grid {
            grid-template-columns: 1fr;
        }

        .header-actions {
            text-align: center;
        }

        .loan-actions .d-flex {
            flex-direction: column;
        }
    }

    /* Tomt tillstånd */
    .empty-state {
        color: var(--gray-400);
        padding: 3rem 1rem;
    }
</style>
